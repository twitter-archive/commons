<?xml version="1.0"?>

<!--
=================================================================================================
Copyright 2011 Twitter, Inc.
-------------------------------------------------------------------------------------------------
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this work except in compliance with the License.
You may obtain a copy of the License in the LICENSE file, or at:

 http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
=================================================================================================
-->

<!-- generated by pants! -->
<project name="${lib.id}" default="compile" basedir=".">
  <import file="${root_dir}/build-support/ant/init.xml"/>

  <!-- TODO(jsirois): consolidate ${lib.id}.sources and allsources -->
  <property name="allsources" value="${" ".join(lib.allsources)}"/>

  <fileset id="${lib.id}.sources" dir="${"${"}protobuf.src.dir}">
  % for path in lib.sources:
    <include name="${path}"/>
  % endfor
  </fileset>

  <fileset id="${lib.id}.protobuf.sources" dir="${"${"}protobuf.src.dir}">
    % for path in lib.sources:
    <include name="${path}"/>
    % endfor
  </fileset>

  <property name="compile.name" value="${lib.id}"/>
  <property name="ivy.module" value="${lib.module}"/>

  <import file="${"${"}ant.dir}/module.xml"/>

  <!--
    override package-sources to include protobuf idl as well as generated protobuf java sources
  -->
  <target name="package-sources" depends="generate-protobuf, compile.package-sources">
    <jar jarfile="${"${"}dist.dir}/${"${"}compile.jar.name}-sources.jar" update="true">
      <fileset refid="${lib.id}.protobuf.sources"/>
      <fileset dir="${"${"}protobuf.gen.dir}/gen-java"/>
    </jar>
  </target>

  <target name="push-local" depends="package-sources, prepare-jar-artifacts, compile.push-local"/>

  % if not lib.exported:
  <target name="_push-single">
    <fail>
      Only bare (non-meta) java_protobuf_library modules with a provides key can have their
      artifacts pushed.
    </fail>
  </target>

  <target name="push-single">
    <fail>
      Only bare (non-meta) java_protobuf_library modules with a provides key can have their
      artifacts pushed.
    </fail>
  </target>

  <target name="push">
    <fail>
      Only bare (non-meta) java_protobuf_library modules with a provides key can have their
      artifacts pushed.
    </fail>
  </target>
  % else:
  <property name="${lib.id}.publish.properties" value="${lib.publish_properties}"/>
  <property name="${lib.id}.publish.repo" value="${lib.publish_repo}"/>
  % endif
</project>
