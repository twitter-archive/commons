# ==================================================================================================
# Copyright 2014 Twitter, Inc.
# --------------------------------------------------------------------------------------------------
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this work except in compliance with the License.
# You may obtain a copy of the License in the LICENSE file, or at:
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==================================================================================================

def make_lib(org, name, rev, lib_name=None, excludes=None, intransitive=False, deps=None):
  lib_name = lib_name or name
  jar_dep = jar(org=org, name=name, rev=rev)
  if intransitive:
    jar_dep.intransitive()
  jar_library(name=lib_name, dependencies=[jar_dep] + (deps or []))


make_lib('com.martiansoftware', 'nailgun-server', '0.9.1')


# AntlrGen
make_lib('org.antlr', 'antlr', '3.4', lib_name='antlr-3.4')
make_lib('org.antlr', 'antlr', '4.2.2', lib_name='antlr-4')


# ScroogeGen
make_lib('com.twitter', name='scrooge-generator_2.9.2', rev='3.12.1', lib_name='scrooge-gen')
# TODO(John Sirois): Consider disabling this option and pulling inside Twitter
make_lib('com.twitter', name='scrooge-generator', rev='3.1.1', lib_name='scrooge-legacy-gen')


# IvyResolve
make_lib('xalan', 'xalan', '2.7.1')


# JavaCompile
make_lib('com.sun.tools', 'jmake', '1.3.8-1')
make_lib('com.twitter.common.tools', 'java-compiler', '0.0.17')


# ScalaCompile
make_lib('com.typesafe.zinc', 'zinc', '0.3.2-M1')
jar_library(name='scala-compile-2.9.3',
  dependencies=[
    pants('3rdparty/jvm/org/scala-lang:scala-compiler')
  ]
)


# Checkstyle
make_lib('com.puppycrawl.tools', 'checkstyle', '5.7', lib_name='twitter-checkstyle',
  deps=[
    jar(org='com.twitter.common', name='checkstyle', rev='0.0.7')
      .exclude(jar(org='com.google.guava', name='guava'))
  ]
)


# Scalastyle
make_lib('org.scalastyle', 'scalastyle_2.9.3', '0.3.2', lib_name='scalastyle')


# JunitRun
make_lib('com.twitter.common', name='junit-runner', rev='0.0.41', lib_name='junit',
  deps=[
    pants('3rdparty/jvm/junit'),
    pants('3rdparty/jvm/org/hamcrest:hamcrest-core'),
  ]
)
make_lib('emma', 'emma', '2.1.5320')


# SpecsRun
make_lib('com.twitter.common', 'specs-testing', '0.0.6', lib_name='scala-specs-2.9.3',
  deps=[
    pants('3rdparty/jvm/org/scala-tools/testing:specs_2.9')
  ]
)


# BenchmarkRun
make_lib('com.google.caliper', 'caliper', '0.5-rc1', lib_name='benchmark-caliper-0.5',
  excludes=[
    exclude(org='com.google.guava', name='guava')
  ]
)
make_lib('com.google.code.java-allocation-instrumenter', 'java-allocation-instrumenter', '2.1',
         lib_name='benchmark-java-allocation-instrumenter-2.1', intransitive=True)


# ScalaRepl
make_lib('org.scala-lang', 'scala-compiler', '2.9.3', lib_name='scala-repl-2.9.3',
  deps=[
    jar(org='org.scala-lang', name='jline', rev='2.9.3'),
  ]
)

