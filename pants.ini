; All of the following are seeded with defaults in the config
;   user: the current user
;   homedir: the current user's home directory
;   buildroot: the root of this repo
;   pants_bootstrapdir: the global pants scratch space primarily used for caches
;   pants_supportdir: pants support files for this repo go here; for example: ivysettings.xml
;   pants_distdir: user visible artifacts for this repo go here
;   pants_workdir: the scratch space used to for live builds in this repo

[DEFAULT]

# Enable our own custom loose-source plugins.
pythonpath: [
    "%(buildroot)s/pants-plugins/src/python",
  ]

backend_packages: [
    'pants.contrib.scrooge',
    'twitter.common.pants.jvm.args',
    'twitter.common.pants.jvm.extras',
    'twitter.common.pants.python.commons',
  ]

checkstyle_suppression_files = [
    '%(pants_supportdir)s/commons/checkstyle/checkstyle_suppressions.xml'
  ]

; Mixed into all cache keys. Bump this to invalidate all existing artifacts.
; Note: If you want to experiment with this locally without affecting artifacts
; read by all, change it to some other string, e.g., <number>-<your username>.
cache_key_gen_version: '100'

jvm_options: ['-Xmx1g', '-XX:MaxPermSize=256m']

# For [idea] and [eclipse] sections
python_source_paths: ['src/python']
python_test_paths: ['tests/python']
python_lib_paths: ['3rdparty/python']

local_artifact_cache = %(pants_bootstrapdir)s/artifact_cache

[cache.bootstrap]
# The just-in-time tool shading performed by jvm tool bootstrapping is very expensive, so we turn
# on artifact caching for it that can survive clean-all.
read_from = ["%(local_artifact_cache)s"]
write_to = ["%(local_artifact_cache)s"]


[goals]
bootstrap_buildfiles: [
    # This will pick up the whole top level BUILD file family, including BUILD.commons
    '%(buildroot)s/BUILD',
  ]


[ivy]
ivy_profile: %(pants_supportdir)s/ivy/ivy.xml
ivy_settings: %(pants_supportdir)s/ivy/ivysettings.xml
cache_dir: %(homedir)s/.ivy2/twitter-commons


[gen.scrooge]
service_deps: {
    'java': [
      '3rdparty/jvm/commons-lang',
      '3rdparty/jvm/com/twitter:finagle-thrift',
      '3rdparty/jvm/org/slf4j:slf4j-api',
      '3rdparty/jvm/com/twitter:util-core',
    ],
    'scala': [
      '3rdparty/jvm/com/twitter:scrooge-core',
      '3rdparty/jvm/com/twitter:finagle-thrift',
      '3rdparty/jvm/com/twitter:util-core',
    ]
  }
structs_deps: {
    'java': [
      '3rdparty/jvm/commons-lang',
      '3rdparty/jvm/org/apache/thrift',
    ],
    'scala': [
      '3rdparty/jvm/com/twitter:scrooge-core',
      '3rdparty/jvm/org/apache/thrift',
    ]
  }
strict: False
verbose: True


[thrift-binary]
version: 0.5.0-finagle


[gen.thrift]
java: {
    'gen': 'java:hashcode',
    'deps': {
      'service': ['3rdparty/jvm/org/apache/thrift:thrift-0.5.0-finagle'],
      'structs': ['3rdparty/jvm/org/apache/thrift:thrift-0.5.0']
    }
  }
python: {
    'gen': 'py:new_style',
    'deps': {
      'service': ['3rdparty/python:thrift'],
      'structs': ['3rdparty/python:thrift']
    }
  }


[gen.protoc]
version: 2.4.1
javadeps: ['3rdparty/jvm/com/google/protobuf:protobuf-%(version)s']


[compile.checkstyle]
configuration: %(pants_supportdir)s/checkstyle/coding_style.xml
properties: {
    'checkstyle.suppression.files': ','.join(%(checkstyle_suppression_files)s)
  }


[compile.scalastyle]
config: %(buildroot)s/build-support/scalastyle/scalastyle_config.xml
; TODO(John Sirois): The excludes are currently global for all scala files but
; they should be trimmed back or eliminated when scalastyle is restricted to
; non code-gen targets:  https://jira.twitter.biz/browse/AWESOME-6870
excludes: %(buildroot)s/build-support/scalastyle/excludes.txt


[compile.java]
partition_size_hint: 1000000000
jvm_options: ['-Xmx2G']
source: 6
target: 6


[compile.scala]
jvm_options: ['-Xmx2g', '-XX:MaxPermSize=256m', '-Dzinc.analysis.cache.limit=0']


[jvm.repl.scala]
options: ['-Xmx1g', '-XX:MaxPermSize=256m', '-Dscala.usejavacp=true']


[jvm.test.junit]
options: [
    '-Djava.awt.headless=true', '-Xmx1g', '-XX:MaxPermSize=256m',

    # Needed for emma instrumenter to work against classfiles generated by java 7 compilers
    '-XX:-UseSplitVerifier'
  ]


[idea]
scala_maximum_heap_size_mb: 1024
java_maximum_heap_size_mb: 1024


[python-setup]
# We only support commons python code running under 2.7 for now with 3.3+ support to be added later.
interpreter_requirement: CPython>=2.7,<3


[python-repos]
# The custom repo is only needed for antlr-python-runtime.
repos: ['https://raw.github.com/twitter/commons/binaries/pants/third_party/python/index.html']

