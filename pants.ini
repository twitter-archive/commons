# buildroot, homedir and user are assumed to be seeded in the config

[DEFAULT]
# Look for these rcfiles - they need not exist on the system
rcfiles: ['/etc/pantsrc', '~/.pants.new.rc']

pants_workdir: %(buildroot)s/.pants.d
pants_supportdir: %(buildroot)s/build-support
pants_distdir: %(buildroot)s/dist
pants_pythons: %(buildroot)s/.python
confs: ['default']
max_subprocess_args: 100

thrift_workdir: %(pants_workdir)s/thrift
protobuf_workdir: %(pants_workdir)s/protobuf

scala_workdir: %(pants_workdir)s/scalac
scala_compile_profile: scala-compile-2.8.1

java_workdir: %(pants_workdir)s/javac

checkstyle_suppression_files = [
    '%(pants_supportdir)s/commons/checkstyle/checkstyle_suppressions.xml'
  ]

debug_port: 5005


[goals]
bootstrap_buildfiles: [
    # This will pick up the whole top level BUILD file family, including BUILD.commons
    '%(buildroot)s/BUILD',
  ]


[tasks]
build_cache: %(pants_workdir)s/build_cache


[nailgun]
workdir: %(pants_workdir)s/ng
supportdir: %(pants_supportdir)s/ng
jar: %(supportdir)s/lib/nailgun-0.7.1.jar
args: ['-Xmx2g', '-XX:MaxPermSize=256m']


[ivy]
supportdir: %(pants_supportdir)s/ivy
classpath: ['%(supportdir)s/lib/ivy-2.2.0.jar']
ivy_settings: %(supportdir)s/ivysettings.xml
cache_dir: %(homedir)s/.ivy2/twitter-commons


[ivy-profiles]
workdir: %(pants_supportdir)s/profiles


[ivy-resolve]
workdir: %(pants_workdir)s/classpath
nailgun_dir: %(pants_workdir)s/ng/ivy
profile: xalan
transitive: True
args: []


[thrift-gen]
workdir: %(thrift_workdir)s
supportdir: %(pants_supportdir)s/bin/thrift
strict: False
verbose: False
version: 0.5.0-finagle
java: {
    'gen': 'java:hashcode',
    'deps': ['3rdparty:thrift-%(version)s']
  }
python: {
    'gen': 'py:newstyle',
    'deps': ['3rdparty/python:thrift-0.7']
  }


[protobuf-gen]
workdir: %(protobuf_workdir)s
supportdir: %(pants_supportdir)s/bin/protobuf
version: 2.3.0
javadeps: ['3rdparty:protobuf-%(version)s']
pythondeps: []


[checkstyle]
workdir: %(pants_workdir)s/checkstyle
profile: checkstyle
nailgun_dir: %(pants_workdir)s/ng/%(profile)s
configuration: %(pants_supportdir)s/checkstyle/coding_style.xml
properties: {
    'checkstyle.suppression.files': ','.join(%(checkstyle_suppression_files)s)
  }


[java-compile]
workdir: %(java_workdir)s


# jmake setup
#
jmake-profile: jmake
default_to_flatten: True
nailgun_dir: %(pants_workdir)s/ng/%(jmake-profile)s

jvm_args: [ '-Xmx2G' ]

args: [
    '-C-encoding', '-CUTF-8',
    '-C-g',
    '-C-Tcolor',

    # Don't warn for thrift and protobuf gen-files
    '-C-Tnowarnprefixes', '-C%(thrift_workdir)s',
    '-C-Tnowarnprefixes', '-C%(protobuf_workdir)s',

    # Suppress the warning for annotations with no processor - we know there are many of these!
    '-C-Tnowarnregex', '-C^warning: No processor claimed any of these annotations: .*'
  ]
warning_args: [
    '-C-Xlint:all', '-C-Xlint:-serial', '-C-Xlint:-path',
    '-C-deprecation',
  ]
no_warning_args: [
    '-C-Xlint:none',
    '-C-nowarn',
  ]

compiler-profile: twitter-compiler


[scala-compile]
workdir: %(scala_workdir)s

# TODO(John Sirois): Merge profiles into standard pants deps when ant backend is gone.
compile-profile: %(scala_compile_profile)s
zinc-profile: zinc
dependencies-plugin-profile: scala-dependencies-2.8.1

scaladeps: ['3rdparty:scala-library']

default_to_incremental: False
default_to_flatten: True

nailgun_dir: %(pants_workdir)s/ng/%(compile-profile)s
main: scala.tools.nsc.Main
zinc-main: com.typesafe.zinc.Main
args: [
    '-encoding', 'UTF-8',
    '-g:vars',
  ]
warning_args: [
    '-deprecation',
  ]
no_warning_args: [
    '-nowarn',
  ]

jvm_args: [ '-Dzinc.analysis.cache.limit=200' ]


[jvm]
debug_args: ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=%(debug_port)s']


[jvm-run]
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[scala-repl]
profile: scala-repl-2.8.1
jvm_args: ['-Xmx1g', '-XX:MaxPermSize=256m', '-Dscala.usejavacp=true' ]
main: scala.tools.nsc.MainGenericRunner


[junit-run]
workdir: %(pants_workdir)s/junit
junit_profile: junit
emma_profile: emma
args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[specs-run]
workdir: %(pants_workdir)s/specs
profile: scala-specs-2.8.1
args: ['-Xmx1g', '-XX:MaxPermSize=256m']


[javadoc-gen]
workdir: %(pants_workdir)s/javadoc


[markdown-to-html]
workdir: %(pants_workdir)s/markdown
code-style: friendly
extensions: ['.md', '.markdown']


[jar-create]
workdir: %(pants_workdir)s/jars


[binary-create]
outdir: %(pants_distdir)s


[args-resource-mapper]:
classdirs: [ '%(java_workdir)s/classes', '%(scala_workdir)s' ]


[bundle-create]
outdir: %(pants_distdir)s


[ide]
workdir: %(pants_workdir)s/ide
classes_conf: default
sources_conf: sources
extra_jvm_source_paths = []
extra_jvm_test_paths = ['tests/resources']
python_source_paths: ['src/python']
python_test_paths: ['tests/python']
python_lib_paths: ['3rdparty/python']


[provides]
workdir: %(pants_workdir)s/provides


[python-setup]
artifact_cache: %(pants_workdir)s/py_artifact_cache
bootstrap_cache: %(pants_workdir)s/.pip.cache
download_cache: %(pants_workdir)s/.python.download.cache
install_cache: %(pants_workdir)s/.python.install.cache

local_eggs: ['%(buildroot)s/3rdparty/python']

virtualenv_target: %(bootstrap_cache)s/virtualenv-1.7.1.2
virtualenv_urls: ['http://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.1.2.tar.gz']
bootstrap_packages: ['pip','mako']

allow_pypi: True
repos: ['http://pypi.python.org/simple']
indices: ['http://pypi.python.org/simple']
